tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-softlayer-plugin/widget/plugin.yaml
  - http://getcloudify.org/spec/fabric-plugin/1.1/plugin.yaml

inputs:
  username:
    default: ''
  api_key:
    default: ''
  endpoint_url:
    default: ''
  location:
    default: '168642'
    # 352494 - hong kong 2
    # 168642 - san jose
  domain:
    default: 'tam7i7rko.cfy.org'
  ram:
    default: 1155
  os:
    default: 4174
    # 3909 - CentOS X? OS image ID.
    # 3908 - CentOS 6 OS image ID.
    # 4248 - OS_WINDOWS_2008_FULL_STD_64_BIT_R2_SP1
    # 4174 - Ubuntu Linux 12.04 LTS Precise Pangolin - Minimal Install (64 bit)
  image_template_id:
    default: ''
    # '320838'
  image_template_global_id:
    default: ''
  cpu:
    default: 860
  disk:
    default: 3876
  port_speed:
    default: 188
    # 188 - 1 Gbps Public & Private Network Uplinks
    # 497 - 100 Mbps Private Network Uplink
    # 187 - 100 Mbps Public & Private Network Uplinks
  private_network_only:
    default: false
  provision_scripts:
    default:  ['']
  private_vlan:
    default: ''
    # 486330 # Private VLAN 964 on bcr01a.hkg02
  public_vlan:
    default: ''
    # 486454 # Public VLAN 862 on fcr01a.hkg02
  additional_ids:
    default: [
    # 397
    # McAfee VirusScan Anti-Virus - Windows
    ]
  ssh_keys:
    default: [123456]
  ssh_key_filename:
    default: '~/.ssh/id_rsa'

node_types:
  vm_host:
    derived_from: cloudify.softlayer.nodes.VirtualServer

  web_server:
    derived_from: cloudify.nodes.WebServer
    properties:
      tomcat_version:
        description: 'The tomcat version that you aer using. E.g :apache-tomcat-7.0.23'
      download_path:
        description: 'A full url path to the Tomcat zip file'
      war_url:
        description: 'A full url path to the war file'
      war_filename:
        description: 'The name of the war file. E.g: helloworld.war'
      java_url:
        description: 'A full url to jdk-6u32-linux-x64.bin'
      application_name:
        description: 'The name of the application. E.g: helloworld'

node_templates:  
  tomcat_vm:
    type: vm_host
    properties:
      api_config: { get_property: [softlayer_configuration, api_config] }
      location: { get_input: location }
      domain: { get_input: domain }
      ram: { get_input: ram }
      os: { get_input: os }
      image_template_id: { get_input: image_template_id }
      image_template_global_id: { get_input: image_template_global_id }
      cpu: { get_input: cpu }
      disk: { get_input: disk }
#      agents_user: { get_input: agents_user }
      ssh_keys: { get_input: ssh_keys }
      port_speed: { get_input: port_speed }
      private_network_only: { get_input: private_network_only }
      private_vlan: { get_input: private_vlan }
      public_vlan: { get_input: public_vlan }
      provision_scripts: { get_input: provision_scripts }
      additional_ids: { get_input: additional_ids }
      install_agent: true
    instances:
      deploy: 1

  tomcat_server:
    type: web_server
    properties:
      port: 8080      
      download_path: http://repository.cloudifysource.org/org/apache/tomcat/7.0.23/apache-tomcat-7.0.23.zip
      war_url: https://repository.cloudifysource.org/org/cloudifysource/examples/helloworld/helloworld.war
      war_filename: helloworld.war
      tomcat_version: apache-tomcat-7.0.23
      java_url: http://repository.cloudifysource.org/com/oracle/java/1.6.0_32/jdk-6u32-linux-x64.bin
      application_name: helloworld
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: tomcat-scripts/install-tomcat.sh
          inputs:
            process:
              args: [get_attribute: [tomcat_vm, public_ip]]
        configure: tomcat-scripts/configure-tomcat.sh
        start: tomcat-scripts/start-tomcat.sh
        stop: tomcat-scripts/stop-tomcat.sh  
        uninstall: tomcat-scripts/uninstall-tomcat.sh

    relationships:
      - type: cloudify.relationships.contained_in
        target: tomcat_vm

  softlayer_configuration:
    type: softlayer_configuration
    properties:
      api_config:
        username: { get_input: username }
        api_key: { get_input: api_key }
        endpoint_url: { get_input: endpoint_url }

outputs:
  endpoint:
    description: My application endpoint
    value:
      ip_address: { get_attribute: [ tomcat_vm, ip ] }
      port: { get_property: [ tomcat_server, port ] }
      public_ip: { get_attribute: [tomcat_vm, public_ip] }
      application_url: { get_attribute: [tomcat_server, application_url] }
