tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.1/plugin.yaml  

inputs:
  docRoot:
    default: /var/www
  dbPort:
    default: 3306
  memcachePort:
    default: 11211
  agent_user:
    default: root
  agent_private_key_path:
    default: '~/.ssh/id_rsa'
#158.85.244.244 	10.124.123.4
#173.192.230.131 	10.108.127.67
#173.192.230.130 	10.108.127.66
  apache_host_ip:
    default: '10.124.123.4'
  memcached_host_ip:
    default: '10.108.127.67'
  mysql_host_ip:
    default: '10.108.127.66'

node_types:
  host:
    derived_from: cloudify.nodes.Compute
    properties:
      cloudify_agent:
        default:
          user: { get_input: agent_user }
          key: { get_input: agent_private_key_path }

  apache_host:
    derived_from: host
    properties:
      ip:
        default: { get_input: apache_host_ip }

  mysql_host:
    derived_from: host
    properties:
      ip:
        default: { get_input: mysql_host_ip }  

  memcached_host:
    derived_from: host
    properties:
      ip:
        default: { get_input: memcached_host_ip }

  mysql_dbms:
    derived_from: cloudify.nodes.DBMS
    properties:
      port:
        description: MySQL port
        type: integer
      sectionNames:
        description: A command separated list of my.cnf section names
        type: string
      variableNames:
        description: A command separated list of my.cnf variable names
        type: string
      newValues:
        description: A command separated list of my.cnf values for the above variable names
        type: string

  mysql_schema:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      port:
        description: MySQL port
        type: integer
      schemaurl:
        description: schema zip url
        type: string
      query:
        description: Test Query
        type: string

  memcached_db_server:
    derived_from: cloudify.nodes.DBMS
    properties:
      port:
        description: Memcached port
        type: integer

  memcached_application:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      port:
        description: Memcached port
        type: integer
      requiredmemory:
        description: Required memory size in MB
        type: integer

  apache_server:
    derived_from: cloudify.nodes.WebServer
    properties:
      base_port:
        description: Web application port
        type: integer
      needPhp:
        description: Does this application require php
        type: string
      needMemcache:
        description: Does this application require memcache
        type: string
      dbType:
        description: Database type that this application requires
        type: string
      num_instances:
        description: Number of instances
        type: integer
      drupalVersion:
        description: Drupal version
        type: string
      newPort:
        description: Apache port
        type: integer
      docRoot:
        description: docRoot of the Apache
        type: string

  drupal_application:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      drupalImageURL:
        description: Drupal image zip URL
        type: string
      app_name:
        description: Application name
        type: string
      dbName:
        description: Database name
        type: string
      dbUserName:
        description: DB user name
        type: string
      dbUserPassword:
        description: DB user password
        type: string
      docRoot:
        description: docRoot of the Drupal
        type: string

relationships:
  drupal_server_connected_to_mysql_database:
    derived_from: cloudify.relationships.connected_to

  drupal_app_connected_to_mysql_drupal_schema:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        postconfigure: drupal-scripts/configure-mysql-drupal.sh
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        postconfigure: mysql-scripts/configure-mysql-schema.sh
  drupal_app_connected_to_memcached_app:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish: drupal-scripts/configure-memcached-drupal.sh

node_templates:
  mysql_vm:
    type: mysql_host
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
           implementation: diamond.diamond_agent.tasks.install
           inputs:
              diamond_config:
                 interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
         start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
               collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector: {}

  memcached_vm:
    type: memcached_host
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
           implementation: diamond.diamond_agent.tasks.install
           inputs:
              diamond_config:                 
                 interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
         start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
               collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector: {}

  apache_vm:
    type: apache_host
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
           implementation: diamond.diamond_agent.tasks.install
           inputs:
              diamond_config:
                 interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
         start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
               collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector: {}

  mysql_database:
    type: mysql_dbms
    properties:
      port: { get_input: dbPort }
      sectionNames: mysqld
      variableNames: bind-address
      newValues: 0.0.0.0
    interfaces:
      cloudify.interfaces.lifecycle:
        create: mysql-scripts/install-mysql.sh
        start: mysql-scripts/start-mysql.sh
        stop: mysql-scripts/stop-mysql.sh
    relationships:
      - target: mysql_vm
        type: cloudify.relationships.contained_in

  mysql_drupal_schema:
    type: mysql_schema
    properties:
      port: { get_input: dbPort }
      query: select name,mail from users
      schemaurl: http://repository.cloudifysource.org/org/cloudifysource/examples/drupal/new_babies7.zip
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: mysql-scripts/configure-mysql-schema.sh
      cloudify.interfaces.monitoring:
         start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
               collectors_config:
                  MySQLCollector:
                     config:
                        enabled: True
                        hosts: "admin:123@localhost:3306/mydrupaldb"
    relationships:
      - target: mysql_database
        type: cloudify.relationships.contained_in

  memcached_server:
    type: memcached_db_server
    properties:
      port: { get_input: memcachePort }
    interfaces:
      cloudify.interfaces.lifecycle:
        create: memcached-scripts/install-memcached.sh
        configure: memcached-scripts/configure-memcached.sh
    relationships:
      - target: memcached_vm
        type: cloudify.relationships.contained_in

  memcached_app:
    type: memcached_application
    properties:
      port: { get_input: memcachePort }
      requiredmemory: 1000
    interfaces:
      cloudify.interfaces.lifecycle:
        start: memcached-scripts/start-memcached.sh
        stop: memcached-scripts/stop-memcached.sh  
    relationships:
      - target: memcached_server
        type: cloudify.relationships.contained_in

  drupal_server:
    type: apache_server
    properties:
      base_port: 8080
      num_instances: 1
      needPhp: yesplease
      needMemcache: yesplease
      dbType: mysql
      drupalVersion: 7
      newPort: 80
      docRoot: { get_input: docRoot }
    interfaces:
      cloudify.interfaces.lifecycle:
        create: apache-scripts/install-apache.sh
    relationships:
      - type: cloudify.relationships.contained_in
        target: apache_vm
      - type: drupal_server_connected_to_mysql_database
        target: mysql_database

  drupal_app:
    type: drupal_application
    properties:
      docRoot: { get_input: docRoot }
      drupalImageURL: http://repository.cloudifysource.org/org/cloudifysource/examples/drupal/babies_image_d7_v2.zip
      app_name: My drupal web server
      dbName: mydrupaldb
      dbUserName: admin
      dbUserPassword: 123  
    interfaces:
      cloudify.interfaces.lifecycle:        
        start: apache-scripts/start-apache.sh
        stop: apache-scripts/stop-apache.sh
      drupal.interfaces.action:
        install_project: drupal-scripts/drush-install.sh
        set_variable: drupal-scripts/drush-setvar.sh

    relationships:
      - type: cloudify.relationships.contained_in
        target: drupal_server
      - type: drupal_app_connected_to_memcached_app
        target: memcached_app
      - type: drupal_app_connected_to_mysql_drupal_schema
        target: mysql_drupal_schema

plugins:
   drush-plugin:
      executor: central_deployment_agent
      source: drush-plugin

workflows:
   drush_install:
      mapping: drush-plugin.drush.tasks.install_project
      parameters:
         project_name: {}
   
   # See Built-in Workflows in http://getcloudify.org/guide/3.1/guide-workflows.html#built-in-workflows
#   druinstall:
#      mapping: default_workflows.cloudify.plugins.workflows.execute_operation
#      parameters:
#         operation: drupal.interfaces.action.install_project
#         node_ids:
#           - drupal_app

   drush_setvar:
      mapping: drush-plugin.drush.tasks.set_variable
      parameters:
         variable_name: {}
         variable_value: {}

# Syntax without parameters
# drush_dl: drush-plugin.drush.tasks.drush_download_module
# drush_en: drush-plugin.drush.tasks.drush_enable_module

  
outputs:
  endpoint:
    description: My application endpoint
    value:
      ip_address: { get_attribute: [ apache_vm, ip ] }
      port: { get_property: [ drupal_server, base_port ] }
