# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_0

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - cloudify-softlayer-plugin/plugin.yaml

inputs:
  location:
    default: '352494'
    # 352494 - hong kong 2
    # 168642 - san jose
  domain:
    default: 'test.cloudify.org'
  ram:
    default: 864
  os:
    default: 4248
    # 4248 - OS_WINDOWS_2008_FULL_STD_64_BIT_R2_SP1
    # 4174 - Ubuntu Linux 12.04 LTS Precise Pangolin - Minimal Install (64 bit)
  image_template_id:
    default: ''
    # '320838'
  image_template_global_identifier:
    default: ''
  cpu:
    default: 859
  disk:
    default: 1178
  port_speed:
    default: 187
    # 497 - 100 Mbps Private Network Uplink
    # 187 - 100 Mbps Public & Private Network Uplinks
  private_network_only:
    default: false
  provision_scripts:
    default:  ['https://119.81.133.2:443/postprov.cmd']
  private_vlan:
    default: ''
    # 486330 # Private VLAN 964 on bcr01a.hkg02
  public_vlan:
    default: ''
    # 486454 # Public VLAN 862 on fcr01a.hkg02
  additional_ids:
    default: [
    # 397
    # McAfee VirusScan Anti-Virus - Windows
    ]
#  agents_user:
#    default: 'root'
#    type: string

  ssh_user:
    default: 'root'

  ssh_keys:
    default: {}
    # this is a {'label':id} dictionary. for example:
    # {
    #  'cloudify-dev':116386,
    #  'cloudify-test': 73986
    #}

  ssh_key_filename:
    default: '~/.ssh/id_rsa'

node_templates:
  # defining a single node template that will serve as our test node
  test_node:
    type: cloudify.softlayer.nodes.VirtualServer
    properties:
      location: { get_input: location }
      domain: { get_input: domain }
      ram: { get_input: ram }
      os: { get_input: os }
      image_template_id: { get_input: image_template_id }
      image_template_global_identifier: { get_input: image_template_global_identifier }
      cpu: { get_input: cpu }
      disk: { get_input: disk }
#      agents_user: { get_input: agents_user }
#      ssh_user: { get_input: ssh_user }
      ssh_keys: { get_input: ssh_keys }
#      ssh_key_filename: { get_input: ssh_key_filename }
      port_speed: { get_input: port_speed }
      private_network_only: { get_input: private_network_only }
      private_vlan: { get_input: private_vlan }
      public_vlan: { get_input: public_vlan }
      provision_scripts: { get_input: provision_scripts }
      additional_ids: { get_input: additional_ids }
      install_agent: false
