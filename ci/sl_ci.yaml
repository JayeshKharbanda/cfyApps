tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.1/plugin.yaml
  - https://dl.dropboxusercontent.com/u/58809323/sl_plugin_widget.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.1/plugin.yaml 

inputs:
  username:
    default: ''
  api_key:
    default: ''
  endpoint_url:
    default: ''
  agent_user:
    default: 'root'
  ssh_keys:
    type: 'string'
  ssh_key_filename:
    type: 'string'
  location:
    default: '352494'
    # 352494 - hong kong 2
    # 168642 - san jose
  domain:
    default: 'tamir.cfy.org'
  ram:
    default: 1155
  os:
    default: 4174
    # 4248 - OS_WINDOWS_2008_FULL_STD_64_BIT_R2_SP1
    # 4174 - Ubuntu Linux 12.04 LTS Precise Pangolin - Minimal Install (64 bit)
  image_template_id:
    default: ''
  image_template_global_id:
    default: ''
  cpu:
    default: 860
  disk:
    default: 865
  port_speed:
    default: 188
    # 497 - 100 Mbps Private Network Uplink
    # 187 - 100 Mbps Public & Private Network Uplinks
  private_network_only:
    default: false
  provision_scripts:
    default:  ['']
  private_vlan:
    default: ''
    # 5078541  935   ams01  NULL  13  0  0  0  No
    # 5088822  1823  sjc01  NULL  29  0  0  0  No
    # 5656743  993   hkg02  hkg02.bcr01a.993
    # 7416864  1101  sjc01  NULL  13  0  1  0  No	
  public_vlan:
    default: ''
    # 4864545 # Public VLAN 862 on fcr01a.hkg02
  additional_ids:
    default: [
    # 397
    # McAfee VirusScan Anti-Virus - Windows
    ]
  jenkins_user_first_name:
    type: 'string'
  jenkins_user_name:
    type: 'string'
  jenkins_user_passw:
    type: 'string'
  jenkins_to_email:
    type: 'string'
  build_script:
    type: 'string'
  build_environments:
    type: 'string'
  cfy_managers:
    type: 'string'
  prod_environment:
    type: 'string'
  prod_mngr_ip:
    type: 'string'

node_types:
  host:
    derived_from: cloudify.softlayer.nodes.VirtualServer
    properties:
      location: 
        default: { get_input: location }
      domain: 
        default: { get_input: domain }
      ram: 
        default: { get_input: ram }
      cpu: 
        default: { get_input: cpu }
      disk: 
        default: { get_input: disk }
      os: 
        default: { get_input: os }
      ssh_keys:
        default: { get_input: ssh_keys }
      ssh_key_filename:
        default: { get_input: ssh_key_filename }
      cloudify_agent:
        default:
          user: { get_input: agent_user }
      agents_user:
          default: { get_input: agent_user }
      image_template_id:
        default: { get_input: image_template_id }
      image_template_global_id:
        default: { get_input: image_template_global_id }
      port_speed:
        default: { get_input: port_speed }
      private_network_only: 
        default: { get_input: private_network_only }
      private_vlan: 
        default: { get_input: private_vlan }
      public_vlan: 
        default: { get_input: public_vlan }
      provision_scripts: 
        default: { get_input: provision_scripts }
      #additional_ids: 
      #  default:{ get_input: additional_ids }
      install_agent:
        default: true

  jenkins_server:
    derived_from: cloudify.nodes.WebServer
    properties:
      num_instances:
        description: Number of instances
        type: integer
      jenkins_user_first_name:
        default: { get_input: jenkins_user_first_name }
      jenkins_user_name:
        default: { get_input: jenkins_user_name }
      jenkins_user_passw:
        default: { get_input: jenkins_user_passw }
      jenkins_to_email:
        default: { get_input: jenkins_to_email }
      build_script:
        default: { get_input: build_script }
      build_environments:
        default: { get_input: build_environments }
      cfy_managers:
        default: { get_input: cfy_managers }
      prod_environment:
        default: { get_input: prod_environment }
      prod_mngr_ip:
        default: { get_input: prod_mngr_ip }
		

  jenkins_cfy_cli:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      num_instances:
        description: Number of instances
        type: integer
      build_environments:
        default: { get_input: build_environments }
      cfy_managers:
        default: { get_input: cfy_managers }

node_templates:
  jenkins_vm:
    type: host
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
           implementation: diamond.diamond_agent.tasks.install
           inputs:
              diamond_config:
                 interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
         start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
               collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector: {}

  jenkins_app:
    type: jenkins_server
    properties:
      num_instances: 1      
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/installJenkins.sh
        configure: scripts/configureJenkins.sh
        start: scripts/startJenkins.sh
        stop: scripts/stopJenkins.sh
        delete: scripts/uninstallJenkins.sh
      jenkins.interfaces.action:
        jenkins_cmd: scripts/run-jenkins-cmd.sh
    relationships:
      - type: cloudify.relationships.contained_in
        target: jenkins_vm

  cfy_cli:
    type: jenkins_cfy_cli
    properties:
      num_instances: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/installCfyCli.sh
    relationships:
      - type: cloudify.relationships.contained_in
        target: jenkins_vm
      - type: cloudify.relationships.connected_to
        target: jenkins_app

  softlayer_configuration:
    type: softlayer_configuration
    properties:
      api_config:
        username: { get_input: username }
        api_key: { get_input: api_key }
        endpoint_url: { get_input: endpoint_url }

plugins:
   jenkins-cli:
      executor: central_deployment_agent
      source: jenkins-cli-plugin

workflows:
   jenkins_cmd:
      mapping: jenkins-cli.jenkinscmd.tasks.jenkins_run_cmd
      parameters:
         cmd_name: {}
         first_arg: {}

outputs:
  endpoint:
    description: My application endpoint
    value:
      jenkins_public_ip: { get_attribute: [ jenkins_vm, public_ip ] }
      ip_address: { get_attribute: [ jenkins_vm, ip ] }